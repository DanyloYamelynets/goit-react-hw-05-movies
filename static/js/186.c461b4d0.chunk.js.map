{"version":3,"file":"static/js/186.c461b4d0.chunk.js","mappings":"qSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAqB,mCAAG,sGACZL,EAASM,IAAI,uBADD,uBAC3BC,EAD2B,EAC3BA,KAD2B,kBAE5BA,GAF4B,2CAAH,qDAIrBC,EAAmB,mCAAG,WAAMC,GAAN,yFACVT,EAASM,IAAT,gBAA8B,CACnDH,OAAQ,CACNO,MAAOD,KAHsB,uBACzBF,EADyB,EACzBA,KADyB,kBAM1BA,GAN0B,2CAAH,sDAQnBI,EAAmB,mCAAG,WAAMC,GAAN,yFACVZ,EAASM,IAAT,iBAAuBM,IADb,uBACzBL,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,sDAInBM,EAAmB,mCAAG,WAAMD,GAAN,yFACVZ,EAASM,IAAT,iBAAuBM,EAAvB,aADU,uBACzBL,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,sDAInBO,EAAmB,mCAAG,WAAMF,GAAN,yFACVZ,EAASM,IAAT,iBAAuBM,EAAvB,aADU,uBACzBL,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qD,iHCqBhC,UA7CgB,WACd,OAAwCQ,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,2FACxBN,GAAa,GADW,mBAGKL,EAAAA,EAAAA,IAAoBQ,GAHzB,OAGhBN,EAHgB,OAItBC,EAAgBD,GAJM,gDAMtBK,EAAS,KAAMK,SANO,yBAQtBP,GAAa,GARS,4EAAH,qDAYvBM,GACD,GAAE,CAACH,KAGF,gCACGN,GAAgBA,EAAaW,QAAQC,OAAS,GAC7C,wBACGZ,EAAaW,QAAQE,KAAI,gBAAGC,EAAH,EAAGA,OAAQR,EAAX,EAAWA,GAAIS,EAAf,EAAeA,QAAf,OACxB,2BACE,0BAAI,WAASD,MACb,uBAAIC,MAFGT,EADe,OAQ5B,uBAAG,kDAEJJ,IACC,0BACE,SAAC,IAAD,MAGHE,IAAS,2BAAK,UAAQA,OAG5B,C","sources":["Api/Api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'fce4697c079fffcd8ee7621b4b30c3c1',\n  },\n});\n\nexport const requestTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\nexport const requestSearchMovies = async q => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query: q,\n    },\n  });\n  return data;\n};\nexport const requestMovieDetails = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}`);\n  return data;\n};\nexport const requestMovieCredits = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits`);\n  return data;\n};\nexport const requestMovieReviews = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews`);\n  return data;\n};\n","import { requestMovieReviews } from 'Api/Api';\nimport Loader from 'components/Loader/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      setIsLoading(true);\n      try {\n        const movieReviews = await requestMovieReviews(id);\n        setMovieReviews(movieReviews);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [id]);\n\n  return (\n    <>\n      {movieReviews && movieReviews.results.length > 0 ? (\n        <ul>\n          {movieReviews.results.map(({ author, id, content }) => (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie yet.</p>\n      )}\n      {isLoading && (\n        <div>\n          <Loader />\n        </div>\n      )}\n      {error && <div>Error: {error}</div>}\n    </>\n  );\n};\nexport default Reviews;"],"names":["instance","axios","baseURL","params","api_key","requestTrendingMovies","get","data","requestSearchMovies","q","query","requestMovieDetails","movieId","requestMovieCredits","requestMovieReviews","useState","movieReviews","setMovieReviews","isLoading","setIsLoading","error","setError","id","useParams","useEffect","fetchMovieReviews","message","results","length","map","author","content"],"sourceRoot":""}